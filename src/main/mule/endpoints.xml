<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns="http://www.mulesoft.org/schema/mule/core"
    xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:s4hana="http://www.mulesoft.org/schema/mule/s4hana" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/s4hana http://www.mulesoft.org/schema/mule/s4hana/current/mule-s4hana.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd">

    <flow name="schedulerFlow" doc:id="aff4106d-d2f6-4366-940a-a380dcb1cf73">
        <scheduler doc:name="Scheduler" doc:id="58b7c776-fbee-4753-9bea-f6cc3e037efd">
            <scheduling-strategy>
                <fixed-frequency frequency="${scheduler.frequency}" startDelay="${scheduler.start.delay}" />
            </scheduling-strategy>
        </scheduler>
        <os:retrieve key="syncState" doc:name="Retrieve sync state" objectStore="SchedulerStatus" target="syncState">
            <os:default-value><![CDATA[#["fromS4Hana"]]]></os:default-value>
        </os:retrieve>
        <choice doc:name="SyncState?" doc:id="ed5731b0-0b81-446f-a80b-28729dcff5d8">
            <when expression="#[( vars.syncState != 'running' and vars.syncState == 'fromSalesforce') or vars.syncState == null]">
                <logger level="INFO" doc:name="running from Salesforce" doc:id="9b3fefd5-c0eb-4a11-971d-bc35fd14aca3" message="running from Salesforce" />
                <os:store key="syncState" doc:name="Set sync state to running" doc:id="016aef19-c3a4-4ef4-ae14-736617f7076a" objectStore="SchedulerStatus">
                    <os:value><![CDATA[#["running"]]]></os:value>
                </os:store>
                <flow-ref doc:name="queryFlowSalesforce" doc:id="6cf01a93-d096-4cff-aaa8-dc322331c4d9" name="queryFlowSalesforce" />
                <flow-ref doc:name="Call fromSalesforceToS4Hana" doc:id="fc543051-70d2-4ef3-806f-8ee5ef953de1" name="fromSalesforceToS4Hana" />
            </when>
            <when expression="#[vars.syncState != 'running' and vars.syncState == 'fromS4Hana']">
                <logger level="INFO" doc:name="running from Siebel" doc:id="ff94d2ed-9200-4a76-9e44-a60ca8d7c2a1" message="running from Siebel" />
                <os:store key="syncState" doc:name="Set sync state to running" doc:id="17e043d8-1e7b-4524-ab04-454abba538c5" objectStore="SchedulerStatus">
                    <os:value><![CDATA[#["running"]]]></os:value>
                </os:store>
                <flow-ref doc:name="Call queryFlowS4Hana" doc:id="f0d09c7f-c670-428c-9ad0-928530884b79" name="queryFlowS4Hana" />
                <flow-ref doc:name="Call fromS4HanaToSalesforce" doc:id="c09424d8-d8f4-4008-8542-0f4ec42c3666" name="fromS4HanaToSalesforce" />
            </when>
            <otherwise>
                <logger level="INFO" doc:name="Batch running" doc:id="ed69e982-ec5c-482f-91ab-a5402c975412" message="Batch running" />
            </otherwise>
        </choice>
        <error-handler>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="b4058020-c27d-42e3-a04b-c6a229412e39">
                <flow-ref doc:name="errorHandlingFlow" doc:id="ac510b14-906a-499a-ae8d-edc6f8354ae7" name="errorHandlingFlow" />
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="queryFlowS4Hana">
        <os:retrieve key="watermarkS4Hana" objectStore="watermarkStoreS4Hana" target="lastQueryTimestampS4Hana" doc:name="Retrieve lastQueryTimestampS4Hana" doc:id="19b1c25d-a0e1-4c8b-9619-70a1e73db934">
            <os:default-value><![CDATA[#[p('watermark.default.expression') as DateTime]]]></os:default-value>
        </os:retrieve>
        <ee:transform doc:name="Set query filter" doc:id="30e5da5c-9956-4957-9e74-e2621191cc6a">
            <ee:message>
            </ee:message>
            <ee:variables>
                <ee:set-variable variableName="filter"><![CDATA[%dw 2.0
output application/java
---
"BusinessPartnerCategory eq '2' and LastChangeDate gt datetime'" ++ vars.lastQueryTimestampS4Hana as String {format: "yyyy-MM-dd'T00:00:00'"} ++ "'"]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <s4hana:query service="API_BUSINESS_PARTNER" entityType="A_BusinessPartner" doc:name="Query Business Partners" doc:id="af2c4229-8d24-4fc5-96c5-7a69ad5196b7"
            config-ref="SAP_S_4HANA_Config" filter="#[vars.filter]" select="OrganizationBPName1,BusinessPartner,Industry,LastChangeDate" />
        <ee:transform doc:name="Set Variable and input data" doc:id="fa14b514-8951-4729-b264-4ccb1a966431">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload map {
    BusinessPartner: $.BusinessPartner,
    Name: $.OrganizationBPName1,
    Industry: $.Industry
} distinctBy $.Name]]></ee:set-payload>
            </ee:message>
            <ee:variables>
                <ee:set-variable variableName="accounts"><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-variable>
                <ee:set-variable variableName="maxDate"><![CDATA[%dw 2.0
output application/java
---
if (isEmpty(payload)) 
	vars.lastQueryTimestampS4Hana
else 
 	max(payload.LastChangeDate) as DateTime]]></ee:set-variable>
            </ee:variables>
        </ee:transform>
        <os:store key="watermarkS4Hana" failOnNullValue="false" objectStore="watermarkStoreS4Hana" doc:name="Store lastQueryTimestampS4Hana">
            <os:value><![CDATA[#[vars.maxDate]]]></os:value>
        </os:store>
        <foreach doc:name="For Each" doc:id="daa21b7b-1502-4d8b-b6df-ff854e727ab7" collection="#[payload]">
            <ee:transform doc:name="Set Variable Item" doc:id="ae52072a-dda7-4ea2-a444-bd65479e9379">
                <ee:message>
                </ee:message>
                <ee:variables>
                    <ee:set-variable variableName="item"><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-variable>
                </ee:variables>
            </ee:transform>
            <s4hana:query doc:name="Query Business Partner Address" doc:id="66268b99-0617-45aa-9f12-27fc32db3266" config-ref="SAP_S_4HANA_Config" service="API_BUSINESS_PARTNER"
                entityType="A_BusinessPartnerAddress" filter="#[&quot;BusinessPartner eq '&quot; ++ vars.item.BusinessPartner as String ++ &quot;' &quot;]" select="CityName,Country,PostalCode,Region,StreetName" />
            <ee:transform doc:name="Extend partner data about Address" doc:id="c5c3ed24-3a87-4f81-b5a9-bb85035eb7c6">
                <ee:message>
                </ee:message>
                <ee:variables>
                    <ee:set-variable variableName="accounts"><![CDATA[%dw 2.0
output application/java
var account = {
    Name: vars.item.Name,
    Industry: vars.item.Industry,
    BillingCity: payload[0].CityName,
    BillingCountry: payload[0].Country,
    BillingPostalCode: payload[0].PostalCode,
    BillingState: payload[0].Region, 
    BillingStreet: payload[0].StreetName
}
---
vars.accounts + account]]></ee:set-variable>
                </ee:variables>
            </ee:transform>
        </foreach>
        <ee:transform doc:name="Set payload" doc:id="1f53aadf-bfb8-4e30-9d65-ad3f32fff847">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
vars.accounts]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <logger level="INFO" doc:name="Log Partners to sync" doc:id="65934ef1-2939-4fab-bde9-1886331527ea" message="Partners to sync: #[output application/json --- payload]" />
    </flow>
    <flow name="queryFlowSalesforce">
        <os:retrieve key="watermarkSalesforce" objectStore="watermarkStoreSalesforce" target="lastQueryTimestampSalesforce" doc:name="Retrieve lastQueryTimestampSalesforce"
            doc:id="ae7bacee-f8fe-4fac-9924-425b998062fa">
            <os:default-value><![CDATA[#[p('watermark.default.expression')]]]></os:default-value>
        </os:retrieve>
        <salesforce:query doc:id="e058418d-335e-4d98-adca-a5d27963db19" doc:name="Query Accounts from Salesforce" config-ref="Salesforce_Config">
            <salesforce:salesforce-query>SELECT Id, AccountNumber, Description,
                Industry, LastModifiedDate, Name, NumberOfEmployees, ParentId FROM
                Account WHERE LastModifiedById !=
                ':integrationUserId' AND LastModifiedDate &gt;
                :lastModifiedDate
            </salesforce:salesforce-query>
            <salesforce:parameters><![CDATA[#[output application/java
---
{
	"integrationUserId" : p("sfdc.integration.user.id"),
	"lastModifiedDate" : vars.lastQueryTimestampSalesforce
}]]]></salesforce:parameters>
        </salesforce:query>
        <set-variable value="#[max(payload map $.LastModifiedDate)]" doc:name="Set maxLastModifiedDate Variable" doc:id="a311ca18-9db4-489a-9301-aae228883828"
            variableName="maxLastModifiedDate" />
        <os:store key="watermarkSalesforce" failOnNullValue="false" objectStore="watermarkStoreSalesforce" doc:name="Store lastQueryTimestampSalesforce">
            <os:value><![CDATA[#[vars.maxLastModifiedDate]]]></os:value>
        </os:store>
    </flow>
</mule>


        