<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
    xmlns:s4hana="http://www.mulesoft.org/schema/mule/s4hana" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:os="http://www.mulesoft.org/schema/mule/os"
    xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/s4hana http://www.mulesoft.org/schema/mule/s4hana/current/mule-s4hana.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd">

    <flow name="fromS4HanaToSalesforce" doc:id="8759532e-79b7-4789-990c-dc8e162bfd67">
        <batch:job jobName="migratePartnersBatch" doc:id="204892ae-0d97-4326-beae-310c8d52b7a6" blockSize="${page.size}">
            <batch:process-records>
                <batch:step name="migratePartnersToSalesforceStep" doc:id="5bf7f670-5b64-4e59-baac-ebbad83a6cfb">
                    <batch:aggregator doc:name="Batch Aggregator" doc:id="09d3c8a6-2a8f-4e94-8188-53e3f4dde67d" size="${page.size}">
                        <salesforce:query doc:name="Query Accounts" doc:id="47a423bd-0ba7-4084-8d76-0ee3ce11f980" config-ref="Salesforce_Config" target="sfdcAccounts">
                            <salesforce:salesforce-query>SELECT Id, Name FROM Account WHERE Name in (':accounts')</salesforce:salesforce-query>
                            <salesforce:parameters><![CDATA[#[output application/java
---
{
	"accounts" : (payload map ($.Name replace /(\')/ with "\\'")) joinBy "', '"
}]]]></salesforce:parameters>
                        </salesforce:query>
                        <ee:transform doc:name="Add Ids to Accounts" doc:id="6220b9c8-96e7-40df-8747-e46d3466dd14">
                            <ee:message>
                                <ee:set-payload><![CDATA[%dw 2.0
var accounts = payload ++ vars.sfdcAccounts groupBy $.Name
output application/json
---
payload map {
    ($ ++ {Id: accounts[$.Name].Id[0]})
}]]></ee:set-payload>
                            </ee:message>
                            <ee:variables>
                            </ee:variables>
                        </ee:transform>
                        <logger level="INFO" doc:name="Log Accounts" doc:id="a9c79cc8-4cf0-4480-8ec1-3482cfa97769" message="Accounts to upsert: #[output application/json --- payload]" />
                        <salesforce:upsert type="Account" doc:name="Upsert Accounts" doc:id="dffbfeed-fab2-4d54-99e3-ff98d7cabedf" config-ref="Salesforce_Config"
                            externalIdFieldName="Id" />
                        <logger level="INFO" doc:name="Log Upsert result" doc:id="4f04c8c7-cb3f-4852-9d7b-b53f867c47a2" message="#[output application/json --- payload]" />
                    </batch:aggregator>
                </batch:step>
            </batch:process-records>
            <batch:on-complete>
                <os:store key="syncState" doc:name="Set sync state to fromSalesforce" doc:id="81cd0e51-f7c7-4cc9-b433-9e1c3ab0404d" objectStore="SchedulerStatus">
                    <os:value><![CDATA[#["fromSalesforce"]]]></os:value>
                </os:store>
            </batch:on-complete>
        </batch:job>
    </flow>
    <flow name="fromSalesforceToS4Hana" doc:id="edd12c45-0497-4c06-8f66-376a6a5a8dae">
        <batch:job jobName="migrateAccountsBatch" doc:id="86ce03aa-a79c-420a-84c5-a49b4b8448dd" blockSize="${page.size}">
            <batch:process-records>
                <batch:step name="CheckAccountInS4Hana" doc:id="09b48e2e-6e85-4871-a742-271122663303">
                    <ee:transform doc:name="Prepare filteredParam request for query" doc:id="01e63198-031b-4fc1-b4ac-bba001234d84">
                        <ee:message>
                        </ee:message>
                        <ee:variables>
                            <ee:set-variable variableName="filteredParam"><![CDATA[%dw 2.0
output application/java
---
{
	name: "OrganizationBPName1 eq '" ++ payload.Name ++ "'"
}]]></ee:set-variable>
                        </ee:variables>
                    </ee:transform>
                    <s4hana:query service="API_BUSINESS_PARTNER" entityType="A_BusinessPartner" doc:name="Query Business Partner based on name" doc:id="43039704-fcb3-4484-9a7a-65b0a345387b"
                        config-ref="SAP_S_4HANA_Config" filter="#[vars.filteredParam.name]" target="sapId" select="BusinessPartner" />
                    <ee:transform doc:name="Extend payload about Business Partner Id" doc:id="a2b28c77-0c80-4dd2-a350-dea0224fb72f">
                        <ee:message>
                            <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload ++ {
	sapId: vars.sapId[0].BusinessPartner
}]]></ee:set-payload>
                        </ee:message>
                    </ee:transform>
                    <logger level="INFO" doc:name="Log extended payload" doc:id="7e0d0be8-c844-4b4c-86be-c1c41ed78db7" message="#[output apllication/json --- payload]" />
                </batch:step>
                <batch:step name="createAccountsBatch" doc:id="31314cdb-69a8-4a50-8880-1bc04e6838b8" acceptExpression='#[payload.sapId == null]'>
                    <ee:transform doc:name="Prepare Account request" doc:id="f6393bfe-5888-4d3e-a5ae-c07c6667762b">
                        <ee:message>
                            <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
    OrganizationBPName1: payload.Name,
    OrganizationLiquidationDate: now(),
    BusinessPartnerName: payload.Name,
    BusinessPartnerCategory: "2",
    Industry: payload.Industry,
    to_BusinessPartnerAddress : [{
        BusinessPartner: payload.sapId,
        StreetName: payload.BillingStreet,
        District: payload.BillingState,
        CityName: payload.BillingCity,
        Country: payload.BillingCountry,
        PostalCode: payload.BillingPostalCode,
        to_PhoneNumber: {
            PhoneNumber: payload.Phone
        }
    }]
}]]></ee:set-payload>
                        </ee:message>
                    </ee:transform>
                    <s4hana:create-entity service="API_BUSINESS_PARTNER" entityType="A_BusinessPartner" doc:name="Create Account in S4Hana" doc:id="bfb9347f-ef8a-4cf1-9c3c-5f864c268345"
                        config-ref="SAP_S_4HANA_Config" />
                    <ee:transform doc:name="Save S4Hana Response" doc:id="e99a35a6-f93d-44c1-8b7a-9c8060913299">
                        <ee:message>
                            <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
                        </ee:message>
                    </ee:transform>
                    <logger level="INFO" doc:name="Log Response" doc:id="58ba32f4-7462-46c0-abb1-047d19feb76a" message="#[output application/json --- payload]" />
                </batch:step>
                <batch:step name="updateAccountsBatch" doc:id="2c53b4dd-958f-47d6-b37b-07248f0773e2" acceptExpression="#[payload.sapId != null]">
                    <ee:transform doc:name="Prepare Account request" doc:id="0efa926a-6cb3-4fe0-b50e-a834dafebba7">
                        <ee:message>
                            <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
    BusinessPartner: payload.sapId,
    OrganizationBPName1: payload.Name,
    OrganizationLiquidationDate: now(),
    BusinessPartnerName: payload.Name,
    BusinessPartnerCategory: "2",
    Industry: payload.Industry,
    to_BusinessPartnerAddress : [{
        BusinessPartner: payload.sapId,
        StreetName: payload.BillingStreet,
        District: payload.BillingState,
        CityName: payload.BillingCity,
        Country: payload.BillingCountry,
        PostalCode: payload.BillingPostalCode,
        to_PhoneNumber: {
            PhoneNumber: payload.Phone
        }
    }]
}]]></ee:set-payload>
                        </ee:message>
                    </ee:transform>
                    <s4hana:update-entity service="API_BUSINESS_PARTNER" entityType="A_BusinessPartner" doc:name="Update Account in S4Hana" doc:id="15b62053-101e-4510-86f6-eb80ae22a738"
                        config-ref="SAP_S_4HANA_Config" />
                    <ee:transform doc:name="Save S4Hana Response" doc:id="c9675928-fdc9-4cba-96b9-b157c40e2e9e">
                        <ee:message>
                            <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
                        </ee:message>
                    </ee:transform>
                    <logger level="INFO" doc:name="Log Response" doc:id="bfcfbb2b-a261-4e4a-8c92-7da4444dbdf6" message="#[output application/json --- payload]" />
                </batch:step>
            </batch:process-records>
            <batch:on-complete>
                <os:store key="syncState" doc:name="Set sync state to fromS4Hana" doc:id="81cd0e51-f7c7-4cc9-b433-9e1c3ab0404d" objectStore="SchedulerStatus">
                    <os:value><![CDATA[#["fromS4Hana"]]]></os:value>
                </os:store>
            </batch:on-complete>
        </batch:job>
    </flow>
</mule>